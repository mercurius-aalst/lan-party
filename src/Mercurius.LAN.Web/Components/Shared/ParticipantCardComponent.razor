@using Mercurius.LAN.Web.Models.Participants
<div class="participant-overview-card" @onmouseover="() => ShowDeleteIcon = true" @onmouseout="() => ShowDeleteIcon = false" @onclick="() => ShowParticipantPopup(Participant)">
    @if(ShowDeleteIcon && AllowDeleteFunction)
    {
        <button class="btn btn-danger btn-sm rounded-circle position-absolute top-0 end-0 m-2" aria-label="Delete" @onclick:stopPropagation="true" @onclick="async () => await OnParticipantDeleted.InvokeAsync(Participant)">
            <i class="bi bi-trash"></i>
        </button>
    }
    @if(Participant is Player player)
    {
        <div class="participant-avatar player-avatar">@player.Username.Substring(0, 1).ToUpper()</div>
        <div class="participant-overview-name">@player.Username</div>
    }
    else if(Participant is Team team)
    {
        <div class="participant-avatar team-avatar">@team.Name.Substring(0, 1).ToUpper()</div>
        <div class="participant-overview-name">@team.Name</div>
    }
    else
    {
        <div class="participant-overview-name">@Participant.Id</div>
    }
</div>
@code {
    private bool ShowDeleteIcon { get; set; } = false;

    [Parameter] public Participant Participant { get; set; }
    [Parameter] public EventCallback<Participant> OnParticipantSelected { get; set; }
    [Parameter] public EventCallback<Participant> OnParticipantDeleted { get; set; }
    [Parameter] public bool AllowDeleteFunction { get; set; } = false;

    private void ShowParticipantPopup(Participant participant)
    {
        OnParticipantSelected.InvokeAsync(participant);
    }
}
