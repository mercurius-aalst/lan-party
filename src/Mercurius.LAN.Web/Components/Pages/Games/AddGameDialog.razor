@rendermode InteractiveServer
@using Mercurius.LAN.Web.DTOs.Games
@using Mercurius.LAN.Web.Models.Games
@using Mercurius.LAN.Web.Models.Participants
@using Mercurius.LAN.Web.Extensions

<div>
    @if(_isDialogOpen)
    {
        <div class="participants-modal-overlay" @onclick="() => CloseDialog(null)">
            <div class="participants-modal-dialog" @onclick:stopPropagation>
                <button class="participants-modal-close" @onclick="() => CloseDialog(null)">&times;</button>
                <div class="form-container">
                    <h3>Create New Game</h3>
                    <EditForm Model="_newGame" OnValidSubmit="SubmitGameAsync">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label for="name">Name</label>
                            <InputText id="name" class="form-control" @bind-Value="_newGame.Name" />
                        </div>

                        <div class="form-group-inline">
                            <div class="form-group">
                                <label for="bracketType">Bracket Type</label>
                                <InputSelect id="bracketType" class="form-control" @bind-Value="_newGame.BracketType">
                                    @foreach(BracketType type in Enum.GetValues(typeof(BracketType)))
                                    {
                                        <option value="@type">@type.GetLabel()</option>
                                    }
                                </InputSelect>
                            </div>

                            <div class="form-group">
                                <label for="participantType">Participant Type</label>
                                <InputSelect id="participantType" class="form-control" @bind-Value="_newGame.ParticipantType">
                                    @foreach(ParticipantType type in Enum.GetValues(typeof(ParticipantType)))
                                    {
                                        <option value="@type">@type.ToString()</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>

                        <div class="form-group-inline">
                            <div class="form-group">
                                <label for="format">Format</label>
                                <InputSelect id="format" class="form-control" @bind-Value="_newGame.Format">
                                    @foreach(GameFormat type in Enum.GetValues(typeof(GameFormat)))
                                    {
                                        <option value="@type">@type.GetLabel()</option>
                                    }
                                </InputSelect>
                            </div>

                            <div class="form-group">
                                <label for="finalsFormat">Finals Format</label>
                                <InputSelect id="finalsFormat" class="form-control" @bind-Value="_newGame.FinalsFormat">
                                    @foreach(GameFormat type in Enum.GetValues(typeof(GameFormat)))
                                    {
                                        <option value="@type">@type.GetLabel()</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="registrationUrl">Registration url</label>
                            <InputText id="registrationUrl" class="form-control" @bind-Value="_newGame.RegistrationUrl" />
                        </div>
                        <div class="form-group">
                            <label for="gameImage">Game Image</label>
                            <InputFile id="gameImage" class="form-control" OnChange="UploadFile" accept="image/*" />
                        </div>

                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary">Create</button>
                            <button type="button" class="btn btn-secondary" @onclick="() => CloseDialog(null)">Cancel</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    }
</div>